1. create venv
2. activate venv
3. pip install streamlit transformers scikit-learn sentence-transformers
4. pip install python-docx docx2txt PyPDF2
5. streamlit run app.py
6. streamlit cache clear



Hugging Face
Name: ScholarSphere
Permissions: READ
Hugging Face Access Token:
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

Make Sure You're Online and Authenticated
Run this in your terminal to log in to Hugging Face:
huggingface-cli login


Explanation app.py:

Model Initialization:
summarizer: This is the Hugging Face pipeline for summarization. It uses the distilBART model to generate summaries.
model: This is the SentenceTransformer model used to generate embeddings for each summary. These embeddings will be used to compute the similarity between the files.


Streamlit UI:
File Upload: It allows users to upload multiple files.


Summarization: The content of each file is summarized, and the summary is displayed.
Similarity Calculation: Once the summaries are generated, the cosine similarity between them is calculated and displayed.


Cosine Similarity Explanation:
Cosine similarity is a measure of similarity between two non-zero vectors (in this case, the embeddings of text summaries). 
It measures the cosine of the angle between them, which can range from -1 (completely dissimilar) to 1 (completely similar).

Why it works for text:
In text analysis, we convert each document or sentence into a vector using techniques like word embeddings or sentence embeddings (e.g., generated by SentenceTransformer).
Cosine similarity allows us to compare these vectors and determine how similar or different the text is by measuring the "angle" between the vectors, which reflects the semantic similarity between the texts.

For example:
If two summaries have a cosine similarity of 1, it means the summaries are almost identical.
If the similarity is 0, it means there is no similarity at all.

Cosine Similarity in the Code:
In the code, the cosine_similarity function from scikit-learn compares the embeddings of each summary. Since each summary is converted into a vector of numbers (embeddings), the cosine similarity between these vectors will tell you how similar the two summaries are to each other.


CPU Usage: Iâ€™ve set device=-1 for the summarizer, which forces the model to run on CPU to avoid overloading your GPU.